// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Perpustakaan.Data;

namespace Perpustakaan.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Perpustakaan.Models.Anggota", b =>
                {
                    b.Property<string>("NoKTP")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Alamat")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("IdUserId")
                        .HasColumnType("int");

                    b.Property<string>("NamaLengkap")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NoHP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("NoKTP")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUserId");

                    b.ToTable("Anggota");
                });

            modelBuilder.Entity("Perpustakaan.Models.Buku", b =>
                {
                    b.Property<string>("KodeBuku")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("JudulBuku")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Penerbit")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pengarang")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<short>("ThnTerbit")
                        .HasColumnType("smallint");

                    b.HasKey("KodeBuku")
                        .HasName("PRIMARY");

                    b.ToTable("Buku");
                });

            modelBuilder.Entity("Perpustakaan.Models.Pegawai", b =>
                {
                    b.Property<string>("Nip")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Alamat")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("IdUserId")
                        .HasColumnType("int");

                    b.Property<string>("NamaPegawai")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NoHP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Nip")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUserId");

                    b.ToTable("Pegawai");
                });

            modelBuilder.Entity("Perpustakaan.Models.Pinjam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Kembali")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("KodeBuku1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Nip1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("NoKTP1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("TglKembali")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TglPinjam")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("KodeBuku1");

                    b.HasIndex("Nip1");

                    b.HasIndex("NoKTP1");

                    b.ToTable("Pinjam");
                });

            modelBuilder.Entity("Perpustakaan.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Perpustakaan.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("Perpustakaan.Models.Anggota", b =>
                {
                    b.HasOne("Perpustakaan.Models.User", "IdUser")
                        .WithMany()
                        .HasForeignKey("IdUserId");
                });

            modelBuilder.Entity("Perpustakaan.Models.Pegawai", b =>
                {
                    b.HasOne("Perpustakaan.Models.User", "IdUser")
                        .WithMany()
                        .HasForeignKey("IdUserId");
                });

            modelBuilder.Entity("Perpustakaan.Models.Pinjam", b =>
                {
                    b.HasOne("Perpustakaan.Models.Buku", "KodeBuku")
                        .WithMany()
                        .HasForeignKey("KodeBuku1");

                    b.HasOne("Perpustakaan.Models.Pegawai", "Nip")
                        .WithMany()
                        .HasForeignKey("Nip1");

                    b.HasOne("Perpustakaan.Models.Anggota", "NoKTP")
                        .WithMany()
                        .HasForeignKey("NoKTP1");
                });

            modelBuilder.Entity("Perpustakaan.Models.User", b =>
                {
                    b.HasOne("Perpustakaan.Models.UserType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
